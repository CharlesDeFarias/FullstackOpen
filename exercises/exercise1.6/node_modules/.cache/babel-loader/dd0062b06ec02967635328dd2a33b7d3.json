{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cd632m/Desktop/workspaces/bootcamp/FSO/exercises/exercise1.6/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  let total = good + neutral + bad;\n  let avg = (good - bad) / 2;\n  let percent = good / total * 100;\n  let feedbackSubmitted = total !== 0;\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), feedbackSubmitted ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Good:\", good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Neutral:\", neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Bad:\", bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total feeback:\", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Avg Score:\", avg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"% positive:\", percent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 29\n    }, this) : \"No feedback gathered\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 6\n  }, this);\n};\n\n_c = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGood,\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutral,\n      children: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBad,\n      children: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c2 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/cd632m/Desktop/workspaces/bootcamp/FSO/exercises/exercise1.6/src/index.js"],"names":["React","useState","ReactDOM","Statistics","good","neutral","bad","total","avg","percent","feedbackSubmitted","App","setGood","setNeutral","setBad","handleGood","handleNeutral","handleBad","render","document","getElementById"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA0B;AAC3C,MAAIC,KAAK,GAAGH,IAAI,GAAGC,OAAP,GAAiBC,GAA7B;AACA,MAAIE,GAAG,GAAG,CAACJ,IAAI,GAAGE,GAAR,IAAa,CAAvB;AACA,MAAIG,OAAO,GAAIL,IAAI,GAACG,KAAN,GAAa,GAA3B;AACA,MAAIG,iBAAiB,GAAGH,KAAK,KAAK,CAAlC;AAEA;;AACE;AAAC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEEG,iBAAiB,gBAAI;AAAA,8BACpB;AAAA,4BAAUN,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cADoB,eAEpB;AAAA,+BAAaC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAFoB,eAGpB;AAAA,2BAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAHoB,eAIpB;AAAA,qCAAmBC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJoB,eAKpB;AAAA,iCAAeC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cALoB,eAMpB;AAAA,kCAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cANoB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,GAOT,sBATV;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD;AAWH,CAlBD;;KAAMN,U;;AAoBN,MAAMQ,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACP,IAAD,EAAOQ,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUQ,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACK,GAAD,EAAMQ,MAAN,IAAgBb,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMc,UAAU,GAAG,MAAM;AACzBH,IAAAA,OAAO,CAACR,IAAI,GAAG,CAAR,CAAP;AACC,GAFD;;AAGA,QAAMY,aAAa,GAAG,MAAM;AAC1BH,IAAAA,UAAU,CAACR,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAGA,QAAMY,SAAS,GAAG,MAAM;AACtBH,IAAAA,MAAM,CAACR,GAAG,GAAG,CAAP,CAAN;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAES,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAQ,MAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAWE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEb,IAAlB;AAAwB,MAAA,OAAO,EAAEC,OAAjC;AAA0C,MAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA/BD;;GAAMK,G;;MAAAA,G;AAiCNT,QAAQ,CAACgB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Statistics = ({good, neutral, bad}) => {\n  let total = good + neutral + bad;\n  let avg = (good - bad)/2;\n  let percent = (good/total)*100;\n  let feedbackSubmitted = total !== 0;\n\n  return\n    (<div>\n      <h2>statistics</h2>\n      {feedbackSubmitted ? (<ul>\n        <li>Good:{good}</li>\n        <li>Neutral:{neutral}</li>\n        <li>Bad:{bad}</li>\n        <li>Total feeback:{total}</li>\n        <li>Avg Score:{avg}</li>\n        <li>% positive:{percent}</li>\n      </ul>) : \"No feedback gathered\"}\n        </div>)\n};\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => {\n  setGood(good + 1);\n  }\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  }\n  const handleBad = () => {\n    setBad(bad + 1);\n  }\n\n  return (\n    <div>\n      <h2>Give Feedback</h2>\n      <button onClick={handleGood}>\n        Good\n      </button>\n      <button onClick={handleNeutral}>\n        Neutral\n      </button>\n      <button onClick={handleBad}>\n        Bad\n      </button>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}